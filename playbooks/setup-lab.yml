---
  - name: Identify lab hosts to build on
    hosts: lab
    become: true
    vars:
      rabbit_nodes:
        - node1_rabbit_mq_container
        - node2_rabbit_mq_container
        - node3_rabbit_mq_container
    tasks:
      - name: Install dependency packages for lxc
        apt: name={{ item }} state=present
        with_items:
          #- python-lxc
          - lxc
 
      - name: Install LXC python bindings
        pip:
          name: lxc-python2

      - name: Create Rabbit MQ LXC containers
        lxc_container:
          name: '{{ item }}'
          container_log: true
          template: ubuntu
          state: started
          template_options: --release trusty
          container_config:
            - "lxc.start.auto=1"
            - "lxc.start.delay=3"
          container_command: |
            while [[ ! $(ip a s eth0) =~ "inet " ]]
             do
              sleep 1
             done
            
            if [ ! -d /root/.ssh ]; then
             mkdir /root/.ssh
             chmod 0700 /root/.ssh
             echo "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}" | tee -a /root/.ssh/authorized_keys
            fi 
        with_items: '{{ rabbit_nodes }}'
        register: container_info

      - name: Build in-memory inventory inventory
        add_host:
          name: '{{ item.item }}'
          ansible_host: '{{ item.lxc_container.ips.0 }}'
          groups: rabbit
        with_items: '{{ container_info.results }}'

      - name: Write in-memory inventory to file
        template:
          src: '{{ playbook_dir }}/common/templates/ansible_inventory.j2'
          dest: '{{ playbook_dir}}/inventory/ansible_hosts'
          owner: root
          group: root
          mode: 0644
 
      - name: Update ansible inventory with host IP address
        lineinfile:
          regexp: '^{{ item.item }}'
          line: '{{ item.item }}  ansible_host={{ item.lxc_container.ips.0 }}'
          state: present
          dest: '{{ playbook_dir}}/inventory/ansible_hosts'
        with_items: "{{ container_info.results }}"

      - name: Add SSH fingerpring to ~/.ssh/known_hosts
        shell: ssh-keyscan -H '{{ item.lxc_container.ips.0 }}' >> ~/.ssh/known_hosts
        with_items: "{{ container_info.results }}"
