---
  - name: Rabbit MQ Cluster
    hosts: rabbit
    vars:
      current_group: rabbit
    tasks:
    - name: Select rabbitmq master
      set_fact:
        rabbitmq_master: "{{ groups['rabbit'][0] }}"
      when: rabbitmq_master is not defined

    - name: Push out new hosts file
      template:
        src: '{{ playbook_dir }}/common/templates/hosts.j2' 
        dest: '/etc/hosts'
        owner: root
        group: root
        mode: 0644

    - name: Generate rabbitmq erlang cookie
      set_fact:
        rabbitmq_erlang_cookie: "{{ lookup('password', '/tmp/.erlang.cookie length=20 chars=ascii_letters,digits') }}"
      when: rabbitmq_erlang_cookie is not defined

    - name: Install rabbitmq packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - rabbitmq-server
        - erlang-nox
        - erlang-corba

    - name: Enable rabbitmq managent plugin
      shell: rabbitmq-plugins enable rabbitmq_management 
      tags: admin

    - name: Stop rabbitmq server on nodes
      service:
        name: rabbitmq-server
        state: stopped

    - name: Push rabbit cluster erlang cookie key
      template:
        src: common/templates/.erlang.cookie.j2
        dest: /var/lib/rabbitmq/.erlang.cookie
        owner: rabbitmq
        group: rabbitmq
        mode: 0400

    - name: Start rabbitmq server on nodes
      service:
        name: rabbitmq-server
        state: started

    - name: Update /etc/hosts with cluster members
      template:
        src: '{{ playbook_dir }}/common/templates/hosts.j2'
        dest: /etc/hosts
        owner: root
        group: root
        mode: 0644
 
    - name: Stop rabbit MQ app
      shell: rabbitmqctl stop_app
   
    - name: Ensure rabbit app  is stopped before proceeding
      wait_for:
        port: 5672
        state: stopped

    - name: Start rabbit MQ app on master node
      shell: rabbitmqctl start_app
      delegate_to: '{{ rabbitmq_master }}'
      run_once: true

    - name: Ensure rabbit app  is stopped before proceeding
      wait_for:
        port: 5672
        state: started
      delegate_to: '{{ rabbitmq_master }}'
      run_once: true

    - name: Join nodes to master rabbit node
      shell: rabbitmqctl join_cluster "rabbit@{{ rabbitmq_master }}"
      when: inventory_hostname != rabbitmq_master

    - name: Start rabbit MQ app
      shell: rabbitmqctl start_app
      when: inventory_hostname != rabbitmq_master

    - name: Download rabbitmqadmin script add add it to PATH
      get_url:
        url: 'http://{{ inventory_hostname }}:15672/cli/rabbitmqadmin'
        dest: '/usr/local/bin/rabbitmqadmin'
        group: root
        owner: root
        mode: 0755
      tags: admin
